@{
  Layout = "_Layout";
}
@using Factory.Models;
@model Factory.Models.Machine;

<h2>Machine Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>
<h3>@Html.DisplayNameFor(model => model.SerialNumber): @Html.DisplayFor(model => model.SerialNumber)</h3>

@if(@Model.JoinEntities.Count == 0)
{
  <p>This machine is not assigned to any engineers.</p>
  <p>Assign an engineer to view machine status.</p>

}
else
{
  <h4>Engineers assigned to @Model.Name:</h4>
  <ul>
  @foreach(var join in Model.JoinEntities)
  {
    <li>@join.Engineer.Name</li>
      @using (Html.BeginForm("DeleteEngineer", "Machines"))
    {
      @Html.Hidden("joinId", @join.EngineerMachineId)
      <input type="submit" value="Delete"/>
    }
  }
  </ul>

  <h4>Machine status:</h4>
  @if(Model.Operational)
  {
    @using(@Html.BeginForm("Repair", "Machines"))
    {
      @Html.Hidden("machineId", @Model.MachineId)
      <input type="submit" value="Operational. Report needing repairs" class="btn btn-primary">
    }
  }
  @if(!Model.Operational)
  {
    @using(@Html.BeginForm("Repair", "Machines"))
    {
      @Html.Hidden("machineId", @Model.MachineId)
      <input type="submit" value="Offline. Click to repair" class="btn btn-primary">
    }
  }
}

<div id="footer">
<button>@Html.ActionLink("Add an engineer", "AddEngineer", new { id = Model.MachineId })</button>
<button>@Html.ActionLink("Edit Machine", "Edit", new { id = Model.MachineId })</button>
<button>@Html.ActionLink("Delete Machine", "Delete", new { id = Model.MachineId })</button>
<button>@Html.ActionLink("Back to machines", "Index")</button>
</div>